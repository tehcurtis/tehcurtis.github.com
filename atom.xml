<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[curtis on code]]></title>
  <link href="http://tehcurtis.github.io/atom.xml" rel="self"/>
  <link href="http://tehcurtis.github.io/"/>
  <updated>2014-08-06T09:59:10-06:00</updated>
  <id>http://tehcurtis.github.io/</id>
  <author>
    <name><![CDATA[Curtis Edmond]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Rescue Data From Your Dying Hard Drive With Single-user Mode]]></title>
    <link href="http://tehcurtis.github.io/blog/2014/08/02/rescue-data-from-your-dying-hard-drive-with-single-user-mode/"/>
    <updated>2014-08-02T15:13:25-06:00</updated>
    <id>http://tehcurtis.github.io/blog/2014/08/02/rescue-data-from-your-dying-hard-drive-with-single-user-mode</id>
    <content type="html"><![CDATA[<p>About a week or so ago, the hard drive in my Macbook decided to die. Right in the middle
of some very intense work I was doing, all processes slowed to a crawl and the machine locked
up. After staying frozen for a few seconds, I got the dreaded <a href="https://www.google.com/search?q=mac+os+x+screen+of+death&amp;rlz=1C5CHFA_enUS598US599&amp;es_sm=119&amp;source=lnms&amp;tbm=isch&amp;sa=X&amp;ei=dlXdU8DQM8fMsQSyw4DYCw&amp;ved=0CAgQ_AUoAQ&amp;biw=1172&amp;bih=674">screen of death</a>.
This had only been maybe the second time I had ever seen that screen in the couple of
years I had this Macbook so I didn&rsquo;t think too much of it.</p>

<p>I rebooted my machine thinking everything would be fine. It started up and began to load
through the recovery loading screen, but right before the loading was complete, the machine flat out died.
It shut off with no other response. All I had was a black screen. After attempting to start the machine
up a few more times and getting the same result, I started to get concerned.</p>

<p>I had a an external hard drive that I had been using for my Time Machine backups so I knew
I could get most of my data back but not the project I was furiously working on when this
whole debacle started (I hadn&rsquo;t backed up for a few days). Was there a way I could access
the files I was just working on? Turns out there was.</p>

<p>Booting up my mac in single-user mode was the key. To start up in single user mode, hold CMD+S
while your mac boots up until it drops you into single user mode. Starting up in single user mode will bring you
right to a shell prompt. You will probably notice that the filesystem is in a read-only status. You&rsquo;ll want to
re-mount the filesystem in read-write. Do so via this command:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>  /sbin/mount -uw /
</span></code></pre></td></tr></table></div></figure>


<p>Now you can attempt to fix your filesystem
via <a href="http://osxdaily.com/2013/08/07/how-to-repair-a-mac-disk-with-fsck-from-single-user-mode/">fsck</a> but
it may not completely fix what ails your drive. It most certainly did not in my case. So I set about
trying to copy off my folder of work to my external usb hard drive. First I plugged my usb drive in and
made sure the system noticed it. You can do this by checking &ldquo;ls /dev/&rdquo; before you plug the usb drive in, and then
again after you&rsquo;ve plugged it in. After you&rsquo;ve plugged it in, you should notice something new named something like &ldquo;disk1s1&rdquo;
or &ldquo;disk1s2&rdquo;. If you do, that&rsquo;s your usb device. Next, I created a spot to mount my usb drive via</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>  mkdir /Volumes/externalusbdrive
</span></code></pre></td></tr></table></div></figure>


<p>Then I actually mounted the drive via</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>  /sbin/mount_hfs /dev/disk1s1 /Volumes/externalusbdrive
</span></code></pre></td></tr></table></div></figure>


<p>I &ldquo;ls&rdquo;&rsquo;d around a bit on /Volumes/externalusbdrive to make sure everything looked ok and that
the external hard drive seemed to be mounted. After I confirmed everything seemed to be in working order,
I continued to cp over the folders I needed. You could rsync too if you&rsquo;d like but meh, cp worked
fine for me in this case. Once I had my folder, I unmounted my external usb hard drive via:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>  umount /dev/disk1s1
</span></code></pre></td></tr></table></div></figure>


<p>And yes, that&rsquo;s umount and not &ldquo;unmount&rdquo;. Check /dev/ or df to make sure the device appears to
be unmounted, it&rsquo;s safe to go ahead and remove your usb drive, with your work intact. Shut your
machine off, replace the hard drive and continue on with your life.</p>

<p>Shout out to <a href="http://jsalovaara.com/blog/backing-up-files-to-a-usb-drive-using-single-user-mode.html">this</a> blog post
and <a href="http://alvinalexander.com/mac-os-x/mac-osx-single-user-mode-usb-drive">this</a> blog post in walking me
 through how to do all of this. Much appreciated!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello Shhhhh]]></title>
    <link href="http://tehcurtis.github.io/blog/2014/07/28/hello-shhhhh/"/>
    <updated>2014-07-28T22:39:11-06:00</updated>
    <id>http://tehcurtis.github.io/blog/2014/07/28/hello-shhhhh</id>
    <content type="html"><![CDATA[<p>So I wrote a <a href="http://rubygems.org/gems/shhhhh">pretty small</a> gem whose current main purpose is keep the &ldquo;/assets/..&rdquo; entries from appearing in your
dev log files and incidentally your server output. I just got tired of all of assets hiding the real meat of
the request so I figured I would write something to scratch that itch.</p>

<p>Now, there already is a project/gem that does basically the same thing. It is called <a href="https://github.com/evrone/quiet_assets">quiet_assets</a> and it is
a fantastic little gem as well. In that gem, they basically alias_method_chain into the Rails::Rack::Logger#call
method and do their business. I wanted to achieve the same result but with normal inheritance instead
of &ldquo;alias_method_chain&#8221;ing. Turns out I could so I did. I plan on adding some features when I get time so
feel free to check in on it from time to time or even submit some pull requests or issues for any desired functionality.</p>
]]></content>
  </entry>
  
</feed>
